'use strict';

var tslib_es6 = require('../../node_modules/tslib/tslib.es6.js');
var React = require('react');
var PropTypes = require('prop-types');
var CCard = require('../card/CCard.js');
var CCardBody = require('../card/CCardBody.js');
var CCardFooter = require('../card/CCardFooter.js');
require('../card/CCardGroup.js');
require('../card/CCardHeader.js');
require('../card/CCardImage.js');
require('../card/CCardImageOverlay.js');
require('../card/CCardLink.js');
require('../card/CCardSubtitle.js');
require('../card/CCardText.js');
require('../card/CCardTitle.js');
var props = require('../../props.js');

var CWidgetStatsF = React.forwardRef(function (_a, ref) {
    var className = _a.className, color = _a.color, footer = _a.footer, icon = _a.icon, _b = _a.padding, padding = _b === void 0 ? true : _b, title = _a.title, value = _a.value, rest = tslib_es6.__rest(_a, ["className", "color", "footer", "icon", "padding", "title", "value"]);
    return (React.createElement(CCard.CCard, tslib_es6.__assign({ className: className }, rest, { ref: ref }),
        React.createElement(CCardBody.CCardBody, { className: "d-flex align-items-center ".concat(padding === false && 'p-0') },
            React.createElement("div", { className: "me-3 text-white bg-".concat(color, " ").concat(padding ? 'p-3' : 'p-4') }, icon),
            React.createElement("div", null,
                React.createElement("div", { className: "fs-6 fw-semibold text-".concat(color) }, value),
                React.createElement("div", { className: "text-body-secondary text-uppercase fw-semibold small" }, title))),
        footer && React.createElement(CCardFooter.CCardFooter, null, footer)));
});
CWidgetStatsF.propTypes = {
    className: PropTypes.string,
    color: props.colorPropType,
    footer: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
    icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
    padding: PropTypes.bool,
    title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
    value: PropTypes.oneOfType([PropTypes.string, PropTypes.node, PropTypes.number]),
};
CWidgetStatsF.displayName = 'CWidgetStatsF';

exports.CWidgetStatsF = CWidgetStatsF;
//# sourceMappingURL=CWidgetStatsF.js.map
