import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React, { forwardRef, useRef } from 'react';
import PropTypes from 'prop-types';
import classNames from '../../node_modules/classnames/index.js';
import { useForkedRef } from '../../hooks/useForkedRef.js';
import '@popperjs/core';
import Transition from '../../node_modules/react-transition-group/esm/Transition.js';

var CBackdrop = forwardRef(function (_a, ref) {
    var _b = _a.className, className = _b === void 0 ? 'modal-backdrop' : _b, visible = _a.visible, rest = __rest(_a, ["className", "visible"]);
    var backdropRef = useRef(null);
    var forkedRef = useForkedRef(ref, backdropRef);
    return (React.createElement(Transition, { in: visible, mountOnEnter: true, nodeRef: backdropRef, timeout: 150, unmountOnExit: true }, function (state) { return (React.createElement("div", __assign({ className: classNames(className, 'fade', {
            show: state === 'entered',
        }) }, rest, { ref: forkedRef }))); }));
});
CBackdrop.propTypes = {
    className: PropTypes.string,
    visible: PropTypes.bool,
};
CBackdrop.displayName = 'CBackdrop';

export { CBackdrop };
//# sourceMappingURL=CBackdrop.js.map
