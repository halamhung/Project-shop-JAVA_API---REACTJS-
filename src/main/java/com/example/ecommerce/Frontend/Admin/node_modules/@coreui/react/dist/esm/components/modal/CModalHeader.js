import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React, { forwardRef, useContext } from 'react';
import PropTypes from 'prop-types';
import classNames from '../../node_modules/classnames/index.js';
import { CCloseButton } from '../close-button/CCloseButton.js';
import { CModalContext } from './CModal.js';

var CModalHeader = forwardRef(function (_a, ref) {
    var children = _a.children, className = _a.className, _b = _a.closeButton, closeButton = _b === void 0 ? true : _b, rest = __rest(_a, ["children", "className", "closeButton"]);
    var setVisible = useContext(CModalContext).setVisible;
    return (React.createElement("div", __assign({ className: classNames('modal-header', className) }, rest, { ref: ref }),
        children,
        closeButton && React.createElement(CCloseButton, { onClick: function () { return setVisible(false); } })));
});
CModalHeader.propTypes = {
    children: PropTypes.node,
    className: PropTypes.string,
    closeButton: PropTypes.bool,
};
CModalHeader.displayName = 'CModalHeader';

export { CModalHeader };
//# sourceMappingURL=CModalHeader.js.map
