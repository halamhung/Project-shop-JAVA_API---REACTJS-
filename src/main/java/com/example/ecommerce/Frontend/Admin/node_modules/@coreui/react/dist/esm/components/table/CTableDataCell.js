import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React, { forwardRef } from 'react';
import PropTypes from 'prop-types';
import classNames from '../../node_modules/classnames/index.js';
import { colorPropType } from '../../props.js';

var CTableDataCell = forwardRef(function (_a, ref) {
    var _b;
    var children = _a.children, active = _a.active, align = _a.align, className = _a.className, color = _a.color, rest = __rest(_a, ["children", "active", "align", "className", "color"]);
    var Component = rest.scope ? 'th' : 'td';
    return (React.createElement(Component, __assign({ className: classNames((_b = {},
            _b["align-".concat(align)] = align,
            _b['table-active'] = active,
            _b["table-".concat(color)] = color,
            _b), className) || undefined }, rest, { ref: ref }), children));
});
CTableDataCell.propTypes = {
    active: PropTypes.bool,
    align: PropTypes.oneOf(['bottom', 'middle', 'top']),
    children: PropTypes.node,
    className: PropTypes.string,
    color: colorPropType,
};
CTableDataCell.displayName = 'CTableDataCell';

export { CTableDataCell };
//# sourceMappingURL=CTableDataCell.js.map
