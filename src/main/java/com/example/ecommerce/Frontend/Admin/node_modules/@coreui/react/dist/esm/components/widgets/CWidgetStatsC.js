import { __rest, __assign } from '../../node_modules/tslib/tslib.es6.js';
import React, { forwardRef } from 'react';
import PropTypes from 'prop-types';
import { CCard } from '../card/CCard.js';
import { CCardBody } from '../card/CCardBody.js';
import '../card/CCardFooter.js';
import '../card/CCardGroup.js';
import '../card/CCardHeader.js';
import '../card/CCardImage.js';
import '../card/CCardImageOverlay.js';
import '../card/CCardLink.js';
import '../card/CCardSubtitle.js';
import '../card/CCardText.js';
import '../card/CCardTitle.js';
import { CProgress } from '../progress/CProgress.js';
import { colorPropType } from '../../props.js';
import classNames from '../../node_modules/classnames/index.js';

var CWidgetStatsC = forwardRef(function (_a, ref) {
    var className = _a.className, color = _a.color, icon = _a.icon, inverse = _a.inverse, progress = _a.progress, title = _a.title, value = _a.value, rest = __rest(_a, ["className", "color", "icon", "inverse", "progress", "title", "value"]);
    return (React.createElement(CCard, __assign({ className: className, color: color }, (inverse && { textColor: 'white' }), rest, { ref: ref }),
        React.createElement(CCardBody, null,
            icon && (React.createElement("div", { className: classNames('text-end mb-4', inverse ? 'text-white text-opacity-75' : 'text-body-secondary') }, icon)),
            value && React.createElement("div", { className: "fs-4 fw-semibold" }, value),
            title && (React.createElement("div", { className: inverse ? 'text-white text-opacity-75' : 'text-body-secondary' }, title)),
            React.createElement(CProgress, __assign({ className: "mt-3 mb-0", height: 4 }, (inverse && { white: true }), progress)))));
});
CWidgetStatsC.propTypes = {
    className: PropTypes.string,
    color: colorPropType,
    icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
    inverse: PropTypes.bool,
    progress: PropTypes.object,
    title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
    value: PropTypes.oneOfType([PropTypes.string, PropTypes.node, PropTypes.number]),
};
CWidgetStatsC.displayName = 'CWidgetStatsCWidgetStatsC';

export { CWidgetStatsC };
//# sourceMappingURL=CWidgetStatsC.js.map
